


@model inventory_store.Models.CreatePOS

@{
    ViewBag.Title = "AddSales";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="panel panel-default" style="box-shadow:2px 2px 5px grey">
    <div class="panel-heading">
        <span class="glyphicon glyphicon-plus-sign">

        </span>
          
        Point Of Sale
    </div>
</div>
<div>@ViewBag.data</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script type="text/javascript" src="~/Scripts/autocomplete-jquery.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.sale.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sale.Name, new { htmlAttributes = new { @class = "form-control Name" } })
                @Html.ValidationMessageFor(model => model.sale.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @*  <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @if (ViewBag.EditMode=="EditMode")
        {
            @*<div> @ViewBag.vl </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.sale.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sale.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sale.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
        <div class="form-group">
            @Html.LabelFor(model => model.sale.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.sale.Category, new SelectList(" "), "--Select Category--", new { @class = "form-control Category" })

                @Html.ValidationMessageFor(model => model.sale.Category, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.sale.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sale.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sale.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-success" />
            </div>
        </div>
    </div>




   @* <table class="table">

        <tr>

            <th>
                @Html.DisplayNameFor(model => model.sale.Name)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.sale.Category)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.sale.Quantity)

            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Price)

                </th>
            <th>
                @Html.DisplayNameFor(model => model.sale.Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sale.Subtotal)
            </th>

        </tr>
        @foreach (var item in Model.listSale)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subtotal)
                </td>
                <td>


                <td>



                    @Html.ActionLink("Deleteb", "DeleteSale", new { id = item.InventoryId }) |   @Html.ActionLink("Edit", "EditSale", new { id = item.InventoryId })

                </td>
                    @Html.ActionLink("Delete", "delete_medicine", new { id = item.MedicineId }) |   @Html.ActionLink("Edit", "Edit_medicne", new { id = item.Id })

                


            </tr>
        }

    </table>*@


    <div class="card">
        <div class="card-body">

            <div class="row">
                <div class="col-lg-12">
                    <table class="table table-bordered table-hover" id="order-listing" style="text-align:center">
                        <thead class="bg-primary text-white">
                            <tr>
                                @*  <th>
                                        @Html.DisplayNameFor(model => model.med.Id)

                                    </th>*@
                                <th>
                                    @Html.DisplayNameFor(model => model.sale.Name)

                                </th>
                              
                                <th>
                                    @Html.DisplayNameFor(model => model.sale.Category)

                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.sale.Quantity)

                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.sale.Price)

                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.sale.Discount)

                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.sale.Subtotal)

                                </th>
                                <th>Options</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.listSale)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                   
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Category)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Discount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Subtotal)
                                    </td>
                                    <td>

                                        <div class="container">
                                            <div class="row">
                                                <div class="col-lg-12">

                                                    <button type="button" class="btn btn-success" @*style="background-color: #1E90FF; border-radius: 8px; padding: 8px;"*@
                                                            onclick="location.href='@Url.Action("EditSale", new { id = item.SaleId })'">
                                                        <span class="glyphicon glyphicon-edit"></span>
                                                        Edit
                                                    </button>

                                                </div>
                                                <div class="col-lg-12" style="margin-top:5px">

                                                    <button type="button" class="btn btn-danger" @*style="background-color: #1E90FF; border-radius: 8px; padding: 8px;"*@
                                                            onclick="location.href='@Url.Action("DeleteSale", new { id = item.SaleId })'">
                                                        <span class="glyphicon glyphicon-trash"></span>
                                                        Delete
                                                    </button>
                                                </div>

                                            </div>
                                        </div>
                                    </td>
                                </tr>

                            }


                        </tbody>


                    </table>
                </div>
            </div>
        </div>
    </div>

    if (Model.listSale.Count > 0)
    {
        <div class="col-md-offset-2 col-md-10" style="margin-top:10px">

            @Html.ActionLink("Print", "CreateBill", new { id = Model.sale.SaleId},
                      new { @class = "btn btn-success" })

        </div>
    }
    else
    {
        <div class="col-md-offset-2 col-md-10" style="margin-top:10px">

            @Html.ActionLink("Print", "CreateBill", null, new { @class = "btn btn-default disabled" })

        </div> }
    @*autocomplete script start*@
    <script>
    $(".Name").autocomplete({

        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSearchValue","Staff")',
                dataType: "json",
                data: { search: $(".Name").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                   return { label: item , value: item

                        };
                    }));
                },

               error: function (xhr, status, error) {
                    alert("Error");
                }
            });
        }
    });
    </script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>
    $(document).ready(function () {
        $(".Name").change(function () {
            $.get("/Staff/GetStateList", { CountryId: $(".Name").val() }, function (data) {
                $(".Category").empty();
                $.each(data, function (index, row) {
                    $(".Category").append("<option value='" + row + "'>" + row + "</option>")
                });
            });
        })
    });
    </script>
    @*autcomplete method end script*@
}

