@model inventory_store.Models.list_inventory


@{
    ViewBag.Title = "Inventory";
    @Scripts.Render("~/bundles/jqueryval")
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="panel panel-default" style="box-shadow:2px 2px 5px grey">
<div class="panel-heading">
    <span class="glyphicon glyphicon-plus-sign">

    </span>
    Add Inventory
</div>
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script type="text/javascript" src="~/Scripts/autocomplete-jquery.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        @Html.HiddenFor(model => model.med.Id)
    
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.med.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.med.Category, (IEnumerable<SelectListItem>)ViewBag.Category,
                   "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.med.Category, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.med.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.med.Name, (IEnumerable<SelectListItem>)ViewBag.Name,
                   "Select Name", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.med.Name, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.inv.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inv.Name, new { htmlAttributes = new { @class = "form-control Name" } })
                @Html.ValidationMessageFor(model => model.inv.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (ViewBag.EditMode == "EditMode")
        {
            @*<div> @ViewBag.vl </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.inv.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.inv.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.inv.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.inv.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.inv.Category, new SelectList(" "), "--Select Category--", new { @class = "form-control Category" })

                    @Html.ValidationMessageFor(model => model.inv.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.inv.NumberofPacks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inv.NumberofPacks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inv.NumberofPacks, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.inv.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inv.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inv.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.inv.ManufactureDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inv.ManufactureDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inv.ManufactureDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.inv.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inv.ExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inv.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ADD" class="btn btn-success" />
            </div>
        </div>
    </div>
}



@*<table class="table">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.inv.Id)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.inv.Name)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.inv.Category)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.inv.NumberofPacks)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.inv.Quantity)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.inv.ManufactureDate)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.inv.ExpiryDate)

        </th>



    </tr>
    @foreach (var item in Model.llistinv)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberofPacks)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManufactureDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpiryDate)
            </td>



            <td>

                @Html.ActionLink("Delete", "Delete_inventory", new { id = item.Id }) |   @Html.ActionLink("Edit", "Edit_inventory", new { id = item.Id })

            </td>

        </tr>
    }

</table>*@

<div class="card">
    <div class="card-body">

        <div class="row">
            <div class="col-lg-12">
                <table class="table table-bordered table-hover" id="order-listing" style="text-align:center">
                    <thead class="bg-primary text-white">
                        <tr>
                            @*  <th>
                                    @Html.DisplayNameFor(model => model.med.Id)

                                </th>*@
                           
                            <th>
                                @Html.DisplayNameFor(model => model.inv.Name)

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.inv.Category)

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.inv.NumberofPacks)

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.inv.Quantity)

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.inv.ManufactureDate)

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.inv.ExpiryDate)

                            </th>



                            <th>Options</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.llistinv)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Category)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NumberofPacks)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Quantity)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ManufactureDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExpiryDate)
                                </td>
                                <td>

                                    <div class="container">
                                        <div class="row">
                                            <div class="col-lg-12">

                                                <button type="button" class="btn btn-success" @*style="background-color: #1E90FF; border-radius: 8px; padding: 8px;"*@
                                                        onclick="location.href='@Url.Action("Edit_inventory", new { id = item.Id })'">
                                                    <span class="glyphicon glyphicon-edit"></span>
                                                    Edit
                                                </button>

                                            </div>
                                            <div class="col-lg-12" style="margin-top:5px">

                                                <button type="button" class="btn btn-danger" @*style="background-color: #1E90FF; border-radius: 8px; padding: 8px;"*@
                                                        onclick="location.href='@Url.Action("Delete_inventory", new { id = item.Id })'">
                                                    <span class="glyphicon glyphicon-trash"></span>
                                                    Delete
                                                </button>
                                            </div>

                                        </div>
                                    </div>
                                </td>
                            </tr>

                        }


                    </tbody>


                </table>
            </div>
        </div>
    </div>
</div>

@*autocomplete script start*@
<script>
    $(".Name").autocomplete({

        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSearchValue","Staff")',
                dataType: "json",
                data: { search: $(".Name").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                   return { label: item , value: item

                        };
                    }));
                },

               error: function (xhr, status, error) {
                    alert("Error");
                }
            });
        }
    });
</script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $(".Name").change(function () {
            $.get("/Staff/GetStateList", { CountryId: $(".Name").val() }, function (data) {
                $(".Category").empty();
                $.each(data, function (index, row) {
                    $(".Category").append("<option value='" + row + "'>" + row + "</option>")
                });
            });
        })
    });
</script>
@*autcomplete method end script*@